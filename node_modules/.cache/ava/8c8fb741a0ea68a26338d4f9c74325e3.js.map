{"version":3,"sources":["level2.spec.js"],"names":["fs","require","path","test","isBalanced","fileInput","readFileSync","resolve","__dirname","linesInput","split","fileExpected","linesExpected","map","str","forEach","line","i","length","t","is"],"mappings":";;AAAA,MAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,MAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,MAAME,OAAOF,QAAQ,KAAR,CAAb;AACA,MAAMG,aAAaH,QAAQ,mBAAR,CAAnB;;AAEA,MAAMI,YAAYL,GAAGM,YAAH,CAAgBJ,KAAKK,OAAL,CAAaC,SAAb,EAAwB,OAAxB,CAAhB,EAAkD,MAAlD,CAAlB;AACA,MAAMC,aAAaJ,UAAUK,KAAV,CAAgB,IAAhB,CAAnB;AACA,MAAMC,eAAeX,GAAGM,YAAH,CAAgBJ,KAAKK,OAAL,CAAaC,SAAb,EAAwB,UAAxB,CAAhB,EAAqD,MAArD,CAArB;AACA,MAAMI,gBAAgBD,aAAaD,KAAb,CAAmB,IAAnB,EAAyBG,GAAzB,CAA8BC,GAAD,IAASA,QAAQ,MAA9C,CAAtB;;AAEAL,WAAWM,OAAX,CAAmB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC9B,MAAID,KAAKE,MAAL,GAAc,CAAlB,EAAqB;AACnBf,SAAM,QAAOc,IAAI,CAAE,EAAnB,EAAuBE,CAAD,IAAO;AAC3BA,QAAEC,EAAF,CAAKhB,WAAWY,IAAX,CAAL,EAAuBJ,cAAcK,CAAd,CAAvB;AACD,KAFD;AAGD;AACF,CAND","file":"level2.spec.js","sourcesContent":["const fs = require('fs');\nconst path = require('path');\nconst test = require('ava');\nconst isBalanced = require('../../is-balanced');\n\nconst fileInput = fs.readFileSync(path.resolve(__dirname, 'input'), 'utf8');\nconst linesInput = fileInput.split('\\n');\nconst fileExpected = fs.readFileSync(path.resolve(__dirname, 'expected'), 'utf8');\nconst linesExpected = fileExpected.split('\\n').map((str) => str === 'true');\n\nlinesInput.forEach((line, i) => {\n  if (line.length > 0) {\n    test(`Test ${i + 1}`, (t) => {\n      t.is(isBalanced(line), linesExpected[i]);\n    });\n  }\n});\n"]}